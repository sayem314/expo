import groovy.json.JsonSlurper

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        buildToolsVersion = "30.0.2"
        gradlePluginVersion = '4.2.2'
        minSdkVersion = 21
        compileSdkVersion = 30
        targetSdkVersion = 30
        ndkVersion = "21.4.7075529"
        // Some dependencies still expect supportLibVersion to be defined
        supportLibVersion = "29.0.0"
        kotlinVersion = '1.6.10'
    }
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:$gradlePluginVersion")

        // Copied version from the Exponent Android project.
        // Newer versions suffer either from "play-services-basement was supposed to be 15.0.1,
        // but has been resolved to 17.0.0"
        // or https://github.com/segment-integrations/analytics-android-integration-firebase/issues/23
        classpath 'com.google.gms:google-services:4.3.5'  // Google Services plugin

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

plugins {
  id "com.diffplug.spotless" version "5.14.1"
}

def packageJsonFile = new File(rootProject.projectDir, '../package.json')
def packageJson = new JsonSlurper().parseText(packageJsonFile.text)

// [Custom]
ext {
    reactNativeVersion = packageJson.dependencies["react-native"]
}

allprojects {
    // [Custom]
    configurations.all {
        resolutionStrategy.force "com.facebook.react:react-native:${reactNativeVersion}"
    }

    repositories {
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url(new File(["node", "--print", "require.resolve('react-native/package.json')"].execute(null, rootDir).text.trim(), "../android"))
        }
        maven {
            // Android JSC is installed from npm
            url(new File(["node", "--print", "require.resolve('jsc-android/package.json')"].execute(null, rootDir).text.trim(), "../dist"))
        }
        maven {
            // expo-camera bundles a custom com.google.android:cameraview
            url "$rootDir/../node_modules/expo-camera/android/maven"
            url(new File(["node", "--print", "require.resolve('expo-camera/package.json')"].execute(null, rootDir).text.trim(), "../android/maven"))
        }

        maven {
            // Detox is installed from npm
            url(new File(["node", "--print", "require.resolve('detox/package.json')"].execute(null, rootDir).text.trim(), "../Detox-android"))
        }

        google()
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
    }
}

subprojects {
  plugins.apply("com.diffplug.spotless")
  spotless {
    kotlin {
      target '**/*.kt'
      ktlint("0.41.0").userData([
        "disabled_rules"           : "no-wildcard-imports,import-ordering",
        "charset"                  : "utf-8",
        "end_of_line"              : "lf",
        "indent_size"              : "2",
        "indent_style"             : "space",
        "insert_final_newline"     : "true",
        "tab_width"                : "2",
        "trim_trailing_whitespace" : "true"
      ])
      trimTrailingWhitespace()
      indentWithSpaces()
      endWithNewline()
    }
  }
}
