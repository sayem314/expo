{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,yCAA2D;AAC3D,4CAAoB;AACpB,mCAAiC;AACjC,gDAAwB;AAExB,SAAS,mBAAmB;IAC1B,IAAI,IAAA,gBAAO,EAAC,IAAI,EAAE,KAAK,CAAC,EAAE;QACxB,OAAO;YACL,IAAI,EAAE,CAAC,6BAA6B,EAAE,cAAc,EAAE,0BAA0B,CAAC;YACjF,iBAAiB,EAAE,IAAI;YACvB,QAAQ,EAAE,IAAI;SACf,CAAC;KACH;IACD,OAAO;QACL,IAAI,EAAE,CAAC,6BAA6B,CAAC;QACrC,iBAAiB,EAAE,IAAI;QACvB,QAAQ,EAAE,IAAI;KACf,CAAC;AACJ,CAAC;AAED,SAAS,WAAW,CAAC,KAAU;IAC7B,OAAO,OAAO,KAAK,KAAK,WAAW,CAAC;AACtC,CAAC;AAED,SAAS,UAAU,CAAC,QAAkB;IACpC,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/C,CAAC;AAED,SAAgB,iBAAiB,CAAC,SAAc,EAAE;IAChD,MAAM,EACJ,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,gBAAgB,EACnC,cAAc,EACd,MAAM,GAAG,EAAE,EACX,MAAM,GAAG,EAAE,EACX,WAAW,KAET,MAAM,EADL,UAAU,UACX,MAAM,EAPJ,6DAOL,CAAS,CAAC;IACX,MAAM,WAAW,GAAG,cAAI,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;IAE/D,MAAM,EAAE,IAAI,EAAE,UAAU,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC;IAC3C,IAAI,UAAU,CAAC;IACf,IAAI,OAAO,CAAC;IAEZ,2FAA2F;IAC3F,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,UAAU,CAAC;IAElC,IAAI,IAAI,KAAK,YAAY,EAAE;QACzB,UAAU,GAAG,oBAAoB,UAAU,EAAE,CAAC;QAE9C,MAAM,EAAE,GAAG,EAAE,GAAG,IAAA,kBAAS,EAAC,WAAW,EAAE,EAAE,yBAAyB,EAAE,IAAI,EAAE,CAAC,CAAC;QAC5E,MAAM,eAAe,GAAG,IAAA,yBAAgB,EAAC,GAAG,CAAC,CAAC;QAE9C,MAAM,WAAW,GAAG,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,eAAe,CAAC,CAAC;QAC/D,MAAM,YAAY,GAAG,SAAS,WAAW,EAAE,CAAC;QAC5C,MAAM,QAAQ,GAAG,CAAC,YAAY,CAAC,CAAC;QAChC,MAAM,QAAQ,GAAG,YAAE,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAE5C,IAAI,CAAC,cAAc,IAAI,CAAC,QAAQ,EAAE;YAChC,MAAM,YAAY,GAAG,QAAQ,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,WAAW,EAAE,CAAC;YACjF,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;SAChC;QACD,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;KAChC;SAAM;QACL,OAAO,GAAG,kBAAkB,WAAW,4BAA4B,CAAC;QACpE,UAAU,GAAG,qBAAqB,UAAU,EAAE,CAAC;KAChD;IAED,MAAM,UAAU,GAAG,YAAE,CAAC,UAAU,CAAC,cAAI,CAAC,OAAO,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC,CAAC;IAC5E,IAAI,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC;IAC/E,IAAI,CAAC,UAAU,EAAE;QACf,aAAa,IAAI,KAAK,CAAC;QACvB,OAAO,GAAG,UAAU,CAAC,CAAC,MAAM,WAAW,kBAAkB,OAAO,CAAC,GAAG,EAAE,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;KACrF;IAED,MAAM,GAAG,GAAG,WAAW,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC;IAE9D,uCACK,UAAU,KACb,GAAG,EACH,MAAM,kCACD,mBAAmB,EAAE,GACrB,MAAM,GAEX,MAAM,gCACJ,aAAa,EACb,KAAK,EAAE,IAAI,IACR,MAAM,KACT,OAAO,EACP,IAAI,EAAE,UAAU,OAElB;AACJ,CAAC;AA/DD,8CA+DC","sourcesContent":["import { getWebOutputPath, getConfig } from '@expo/config';\nimport fs from 'fs';\nimport { boolish } from 'getenv';\nimport path from 'path';\n\nfunction getPuppeteerOptions() {\n  if (boolish('CI', false)) {\n    return {\n      args: ['--ignore-certificate-errors', '--no-sandbox', '--disable-setuid-sandbox'],\n      ignoreHTTPSErrors: true,\n      headless: true,\n    };\n  }\n  return {\n    args: ['--ignore-certificate-errors'],\n    ignoreHTTPSErrors: true,\n    headless: true,\n  };\n}\n\nfunction isUndefined(value: any): boolean {\n  return typeof value === 'undefined';\n}\n\nfunction ofCommands(commands: string[]): string {\n  return commands.filter(Boolean).join(' && ');\n}\n\nexport function withExpoPuppeteer(config: any = {}): { [key: string]: any } {\n  const {\n    mode = process.env.EXPO_WEB_E2E_ENV,\n    preventRebuild,\n    server = {},\n    launch = {},\n    projectRoot,\n    ...partConfig\n  } = config;\n  const projectPath = path.resolve(projectRoot || process.cwd());\n\n  const { port: serverPort = 5000 } = server;\n  let defaultURL;\n  let command;\n\n  // Tell Expo CLI to use the same port on which the test runner expects there to be a server\n  process.env.WEB_PORT = serverPort;\n\n  if (mode === 'production') {\n    defaultURL = `http://localhost:${serverPort}`;\n\n    const { exp } = getConfig(projectPath, { skipSDKVersionRequirement: true });\n    const outputBuildPath = getWebOutputPath(exp);\n\n    const buildFolder = path.resolve(projectPath, outputBuildPath);\n    const serveCommand = `serve ${buildFolder}`;\n    const commands = [serveCommand];\n    const hasBuild = fs.existsSync(buildFolder);\n\n    if (!preventRebuild || !hasBuild) {\n      const buildCommand = `node ${require.resolve('./build-expo.js')} ${projectPath}`;\n      commands.unshift(buildCommand);\n    }\n    command = ofCommands(commands);\n  } else {\n    command = `expo start:web ${projectPath} --non-interactive --https`;\n    defaultURL = `https://localhost:${serverPort}`;\n  }\n\n  const hasModules = fs.existsSync(path.resolve(projectPath, 'node_modules'));\n  let launchTimeout = isNaN(server.launchTimeout) ? 30000 : server.launchTimeout;\n  if (!hasModules) {\n    launchTimeout += 30000;\n    command = ofCommands([`cd ${projectPath} && yarn && cd ${process.cwd()}`, command]);\n  }\n\n  const url = isUndefined(config.url) ? defaultURL : config.url;\n\n  return {\n    ...partConfig,\n    url,\n    launch: {\n      ...getPuppeteerOptions(),\n      ...launch,\n    },\n    server: {\n      launchTimeout,\n      debug: true,\n      ...server,\n      command,\n      port: serverPort,\n    },\n  };\n}\n"]}