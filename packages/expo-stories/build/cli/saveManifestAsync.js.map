{"version":3,"file":"saveManifestAsync.js","sourceRoot":"","sources":["../../src/cli/saveManifestAsync.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sDAA2B;AAG3B,mCAA+C;AAE/C,SAAsB,iBAAiB,CAAC,aAA4B,EAAE,MAAoB;;;;;;oBAClF,gBAAgB,GAAG,IAAA,4BAAmB,EAAC,MAAM,CAAC,WAAW,CAAC,CAAC;oBAC3D,qBAAqB,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oBAExE,qBAAM,kBAAG,CAAC,SAAS,CAAC,gBAAgB,EAAE,qBAAqB,EAAE;4BAC3D,QAAQ,EAAE,OAAO;yBAClB,CAAC,EAAA;;oBAFF,SAEE,CAAC;;;;;CACJ;AAPD,8CAOC","sourcesContent":["import fse from 'fs-extra';\n\nimport { StoryOptions, StoryManifest } from '../types';\nimport { getManifestFilePath } from './shared';\n\nexport async function saveManifestAsync(storyManifest: StoryManifest, config: StoryOptions) {\n  const manifestFilePath = getManifestFilePath(config.projectRoot);\n  const storyManifestAsString = JSON.stringify(storyManifest, null, '\\t');\n\n  await fse.writeFile(manifestFilePath, storyManifestAsString, {\n    encoding: 'utf-8',\n  });\n}\n"]}