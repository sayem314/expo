name: docs

defaults:
  run:
    shell: bash
    working-directory: docs

on:
  workflow_dispatch: {}
  push:
    branches: [master]
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'
  pull_request:
    paths:
      - 'docs/**'
      - '.github/workflows/docs.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  docs:
    runs-on: ubuntu-18.04
    steps:
      - name: Install Node 14
        uses: actions/setup-node@v2
        with:
          node-version: '14.17'
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('docs/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - run: yarn test
      - run: yarn lint --max-warnings 0
      - run: yarn danger ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check if `docs/yarn.lock` has been changed
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            lock:
              - 'docs/yarn.lock'
      - name: Cache Next folder
        if: steps.changes.outputs.lock == 'false'
        uses: actions/cache@v2
        with:
          path: docs/.next/cache
          key: docs-next-${{ hashFiles('docs/yarn.lock') }}-next-${{ hashFiles('docs/next.config.js') }}
      - run: yarn export
        timeout-minutes: 20
        env:
          USE_ESBUILD: 1
      # TODO(cedric): If we have time, we should make sure all links are valid and connected to a proper header
      # - name: lint links
      #   run: yarn lint-links --quiet
      - name: test links (legacy)
        run: |
          yarn export-server &
          while ! nc -z localhost 8000; do
            sleep 1
          done
          yarn test-links http://127.0.0.1:8000
        timeout-minutes: 1
      - run: ./deploy.sh
        if: ${{ github.event.ref == 'refs/heads/master' }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: ðŸ”” Notify on Slack
        uses: 8398a7/action-slack@v3
        if: failure() && github.event.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_docs }}
        with:
          channel: '#docs'
          status: ${{ job.status }}
          fields: job,message,ref,eventName,author,took
          author_name: Docs
